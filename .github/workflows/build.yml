name: Build Release

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: deen
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: deen.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: deen
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Rename binary
      shell: bash
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          mv target/${{ matrix.target }}/release/deen.exe target/${{ matrix.target }}/release/${{ matrix.binary_name }}
        else
          mv target/${{ matrix.target }}/release/deen target/${{ matrix.target }}/release/${{ matrix.binary_name }}
        fi
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.binary_name }}-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/${{ matrix.binary_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Prepare release assets
      run: |
        mkdir -p release-assets
        
        # Copy binaries and rename them with target suffix
        cp artifacts/deen-x86_64-unknown-linux-gnu/deen release-assets/deen-linux-x86_64
        cp artifacts/deen.exe-x86_64-pc-windows-msvc/deen.exe release-assets/deen-windows-x86_64.exe
        cp artifacts/deen-x86_64-apple-darwin/deen release-assets/deen-macos-x86_64
        
        # Copy other required files
        cp LICENSE release-assets/
        cp README.md release-assets/
        cp -r stdlib release-assets/
        
        # Create archive for stdlib and docs
        tar -czf release-assets/stdlib.tar.gz stdlib
        tar -czf release-assets/docs.tar.gz LICENSE README.md
    
    - name: Create Draft Release
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        files: |
          release-assets/deen-linux-x86_64
          release-assets/deen-windows-x86_64.exe
          release-assets/deen-macos-x86_64
          release-assets/LICENSE
          release-assets/README.md
          release-assets/stdlib.tar.gz
          release-assets/docs.tar.gz
        body: |
          ## Release Notes
          
          ### Downloads
          - **Linux (x86_64)**: `deen-linux-x86_64`
          - **Windows (x86_64)**: `deen-windows-x86_64.exe`
          - **macOS (x86_64)**: `deen-macos-x86_64`
          
          ### Additional Files
          - `LICENSE` - License file
          - `README.md` - Project documentation
          - `stdlib.tar.gz` - Standard library archive
          - `docs.tar.gz` - Documentation archive
          
          ### Changes
          <!-- Add your changelog here -->
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
